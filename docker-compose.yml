services:
  web:
    build:
      context: .
    env_file:
      - ./.env
    environment:
      # Ensure Django connects to these service names
      - DATABASE_HOST=db
      - ELASTIC_HOST=http://es:9200
      - DJANGO_DEBUG=${DJANGO_DEBUG:-True}
    volumes:
      - ./:/app
      - media_volume:/app/media
      - static_volume:/app/static
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      es:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/ >/dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:15
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5433"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9200/_cluster/health | grep -E 'green|yellow' >/dev/null || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 10

volumes:
  postgres_data:
  esdata:
  media_volume:
  static_volume:
